<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <artifactId>zeta-kotlin-module</artifactId>
        <groupId>com.zeta</groupId>
        <version>1.1.3</version>
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <artifactId>zeta-bootstrap</artifactId>
    <name>zeta-kotlin</name>
    <description>Bootstrap项目启动模块</description>
    <packaging>jar</packaging>

    <dependencies>
        <!--
        通用依赖(zeta-common里面的)
        -->

        <!--
        业务依赖(zeta-kotlin各个jar包的)
        说明：
        1.如无特殊情况，bootstrap模块只会引入业务模块的controller包。
        2.新增了业务模块（例如：zeta-job），记得在bootstrap模块引用一下对应的controller
        -->
        <!-- zeta-system-controller -->
        <dependency>
            <groupId>com.zeta</groupId>
            <artifactId>zeta-system-controller</artifactId>
            <version>${zeta-kotlin.version}</version>
        </dependency>

        <!-- zeta-msg-controller -->
        <dependency>
            <groupId>com.zeta</groupId>
            <artifactId>zeta-msg-controller</artifactId>
            <version>${zeta-kotlin.version}</version>
        </dependency>

        <!-- TODO: zeta-xxxx-controller -->



        <!--
        其它依赖（spring boot、其它第三方jar等）
        -->
    </dependencies>

    <build>
        <!-- jar包的名字 -->
        <finalName>${project.name}</finalName>

        <!-- 源码地址：默认src/main/java -->
        <sourceDirectory>${project.basedir}/src/main/kotlin</sourceDirectory>
        <testSourceDirectory>${project.basedir}/src/test/kotlin</testSourceDirectory>

        <plugins>
            <!--
             spring boot 打包插件
             说明： 只在启动类所在的模块引用
             -->
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>

            <!--
            kotlin打包插件
            说明：
            1.【重要】每个模块都要配置
            2.主要用到了其中的allopen插件（不然代码里面到处都是open class等写法）
            3.在项目根目录的pom.xml里已经配置好了，当然也可以在这里重新配置一下
            -->
            <plugin>
                <groupId>org.jetbrains.kotlin</groupId>
                <artifactId>kotlin-maven-plugin</artifactId>
            </plugin>

            <!-- resources资源插件 ps:在项目根目录的pom.xml里已经配置好了 -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

</project>
