<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
    <parent>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-starter-parent</artifactId>
        <version>2.7.13</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <modelVersion>4.0.0</modelVersion>
    <packaging>pom</packaging>

    <groupId>com.zeta</groupId>
    <artifactId>zeta-kotlin-module</artifactId>
    <version>2.0.0</version>
    <name>${project.artifactId}</name>
    <description>
        zeta-kotlin-module项目是zeta-kotlin的多模块版。
    </description>

    <modules>
        <module>zeta-common</module>
        <module>zeta-components</module>
        <module>zeta-front</module>
        <module>zeta-model</module>
        <module>zeta-service</module>
    </modules>


    <properties>
        <zeta-kotlin.version>${project.version}</zeta-kotlin.version>

        <java.version>1.8</java.version>
        <kotlin.version>1.9.10</kotlin.version>

        <maven.compiler.source>8</maven.compiler.source>
        <maven.compiler.target>8</maven.compiler.target>
        <spring-boot-maven-plugin.version>2.7.13</spring-boot-maven-plugin.version>
        <!-- maven打包跳过测试 -->
        <skipTests>true</skipTests>

        <mybatis.version>3.5.10</mybatis.version>
        <mybatis-plus.version>3.5.3.2</mybatis-plus.version>
        <druid.version>1.2.19</druid.version>
        <sa-token.version>1.36.0</sa-token.version>
        <knife4j.version>2.0.9</knife4j.version>
        <hutool.version>5.8.22</hutool.version>
        <easy-captcha.version>1.6.2</easy-captcha.version>
        <easypoi.version>4.4.0</easypoi.version>
        <ip2region.version>2.7.0</ip2region.version>
        <aizuda-monitor.version>1.0.0</aizuda-monitor.version>

        <!-- OSS相关 -->
        <aliyun-oss.version>3.17.1</aliyun-oss.version>
        <minio.version>8.5.5</minio.version>

        <!-- 漏洞修复 -->
        <snakeyaml.version>2.0</snakeyaml.version>
        <undertow.verssion>3.2.0</undertow.verssion>
    </properties>


    <!-- 依赖管理 在里面配置的依赖，子模块引用的时候不用写版本号-->
    <dependencyManagement>
        <dependencies>
            <!--
            common 相关
            -->
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-common-annotation</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-common-base</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-common-controller</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-common-core</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <!--
            components 相关
            -->
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-file-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-log-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-mybatisplus-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-redis-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-satoken-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-swagger-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-websocket-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-quartz-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-xss-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-crypto-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>
            <dependency>
                <groupId>com.zeta</groupId>
                <artifactId>zeta-sync-starter</artifactId>
                <version>${zeta-kotlin.version}</version>
            </dependency>

            <!--
            数据库 相关
            -->
            <!-- Mybatis。主要是MybatisPlus注解需要 -->
            <dependency>
                <groupId>org.mybatis</groupId>
                <artifactId>mybatis</artifactId>
                <version>${mybatis.version}</version>
            </dependency>
            <!-- MybatisPlus -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-boot-starter</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MybatisPlus注解 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-annotation</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MybatisPlus核心 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-core</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- MybatisPlus扩展。 -->
            <dependency>
                <groupId>com.baomidou</groupId>
                <artifactId>mybatis-plus-extension</artifactId>
                <version>${mybatis-plus.version}</version>
            </dependency>
            <!-- 数据库连接池 -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>druid-spring-boot-starter</artifactId>
                <version>${druid.version}</version>
            </dependency>


            <!--
             security 相关
             -->
            <!-- sa-token-bom 说明：方便引入sa-token时对齐版本 文档地址： https://sa-token.cc/doc.html -->
            <dependency>
                <groupId>cn.dev33</groupId>
                <artifactId>sa-token-bom</artifactId>
                <version>${sa-token.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>

            <!--
             swagger 相关
             -->
            <!-- knife4j -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-spring-boot-starter</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- knife4j注解 -->
            <dependency>
                <groupId>com.github.xiaoymin</groupId>
                <artifactId>knife4j-annotations</artifactId>
                <version>${knife4j.version}</version>
            </dependency>
            <!-- swagger注解 -->
            <dependency>
                <groupId>io.swagger</groupId>
                <artifactId>swagger-annotations</artifactId>
                <version>1.6.2</version>
            </dependency>

            <!--
             OSS 相关
             -->
            <!-- 阿里云oss -->
            <dependency>
                <groupId>com.aliyun.oss</groupId>
                <artifactId>aliyun-sdk-oss</artifactId>
                <version>${aliyun-oss.version}</version>
            </dependency>
            <!-- minio -->
            <dependency>
                <groupId>io.minio</groupId>
                <artifactId>minio</artifactId>
                <version>${minio.version}</version>
            </dependency>

            <!--
             POI 相关
            -->
            <!-- easypoi 基础注解包 -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-annotation</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <!-- easypoi springmvc整合包 -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-web</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <!-- easypoi 导入导出的工具包 -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-base</artifactId>
                <version>${easypoi.version}</version>
            </dependency>
            <!-- easypoi springboot整合 -->
            <dependency>
                <groupId>cn.afterturn</groupId>
                <artifactId>easypoi-spring-boot-starter</artifactId>
                <exclusions>
                    <!--
                     本项目使用hutoo-bom管理hutool依赖，目的是为了减小jar包体积。
                     然后StrUtil方法在hutool-core(本项目jar包中)和在hutool-all中都存在
                     项目启动的时候swagger会扫描url，用到了StrUtil类中的方法
                     jvm无法判断使用哪个jar包中的方法，导致项目启动失败。故排除掉
                     -->
                    <exclusion>
                        <artifactId>hutool-all</artifactId>
                        <groupId>cn.hutool</groupId>
                    </exclusion>
                </exclusions>
                <version>${easypoi.version}</version>
            </dependency>

            <!--
             utils 相关
             -->
            <!-- hutool-bom -->
            <dependency>
                <groupId>cn.hutool</groupId>
                <artifactId>hutool-bom</artifactId>
                <version>${hutool.version}</version>
                <type>pom</type>
                <scope>import</scope>
            </dependency>
            <!-- 图形验证码 -->
            <dependency>
                <groupId>com.github.whvcse</groupId>
                <artifactId>easy-captcha</artifactId>
                <version>${easy-captcha.version}</version>
            </dependency>

            <!--
             其它
             -->
            <dependency>
                <groupId>com.alibaba</groupId>
                <artifactId>transmittable-thread-local</artifactId>
                <version>2.14.2</version>
            </dependency>
            <!-- 离线IP地址定位库 -->
            <dependency>
                <groupId>org.lionsoul</groupId>
                <artifactId>ip2region</artifactId>
                <version>${ip2region.version}</version>
            </dependency>
            <!-- 获取系统信息 cpu、内存、jvm等。说明：用于前端展示服务器这些指标数据 -->
            <dependency>
                <groupId>com.aizuda</groupId>
                <artifactId>aizuda-monitor</artifactId>
                <version>${aizuda-monitor.version}</version>
            </dependency>
        </dependencies>
    </dependencyManagement>


    <!-- 全局依赖，每个子模块都有的依赖 -->
    <dependencies>
        <!--
         kotlin 相关
         -->
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-reflect</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib-jdk8</artifactId>
            <version>${kotlin.version}</version>
        </dependency>
        <dependency>
            <groupId>org.jetbrains.kotlin</groupId>
            <artifactId>kotlin-stdlib</artifactId>
            <version>${kotlin.version}</version>
        </dependency>

        <!--
        test 相关
        -->
        <dependency>
            <groupId>org.springframework.boot</groupId>
            <artifactId>spring-boot-starter-test</artifactId>
            <scope>test</scope>
        </dependency>

        <!--
         utils 相关
         -->
        <dependency>
            <groupId>cn.hutool</groupId>
            <artifactId>hutool-core</artifactId>
        </dependency>
    </dependencies>


    <profiles>
        <!-- 开发环境 -->
        <profile>
            <id>dev</id>
            <properties>
                <profile.active>dev</profile.active>
            </properties>
            <activation>
                <activeByDefault>true</activeByDefault>
            </activation>
        </profile>
        <!-- 生产环境-->
        <profile>
            <id>prod</id>
            <properties>
                <profile.active>prod</profile.active>
            </properties>
        </profile>
        <!-- 测试环境-->
        <profile>
            <id>test</id>
            <properties>
                <profile.active>test</profile.active>
            </properties>
        </profile>
        <!-- docker环境-->
        <profile>
            <id>docker</id>
            <properties>
                <profile.active>docker</profile.active>
            </properties>
        </profile>
    </profiles>


    <build>
        <!-- resources配置 -->
        <resources>
            <!-- 导入所有resources目录下的文件 -->
            <resource>
                <directory>src/main/resources</directory>
                <includes>
                    <include>**/*</include>
                </includes>
                <filtering>true</filtering>
            </resource>
            <!--
            导入所有kotlin目录下的xml文件
            ps：一开始打算mybatis的xml文件放在dao层同级下的和代码放到一起方便找，后面改成放到resources目录下了
            -->
            <resource>
                <directory>src/main/kotlin</directory>
                <includes>
                    <include>**/*.xml</include>
                </includes>
                <filtering>true</filtering>
            </resource>
        </resources>

        <!-- 插件管理。在里面配置的插件，子模块引用的时候不用写版本号 -->
        <pluginManagement>
            <plugins>
                <!-- spring boot maven插件 -->
                <plugin>
                    <groupId>org.springframework.boot</groupId>
                    <artifactId>spring-boot-maven-plugin</artifactId>
                    <version>${spring-boot-maven-plugin.version}</version>
                </plugin>
                <!-- kotlin maven插件 -->
                <plugin>
                    <groupId>org.jetbrains.kotlin</groupId>
                    <artifactId>kotlin-maven-plugin</artifactId>
                    <version>${kotlin.version}</version>
                    <configuration>
                        <args>
                            <arg>-Xjsr305=strict</arg>
                        </args>
                        <compilerPlugins>
                            <plugin>spring</plugin>
                        </compilerPlugins>
                    </configuration>
                    <dependencies>
                        <!--
                        https://docs.spring.io/spring-framework/docs/current/reference/html/languages.html#final-by-default
                        -->
                        <dependency>
                            <groupId>org.jetbrains.kotlin</groupId>
                            <artifactId>kotlin-maven-allopen</artifactId>
                            <version>${kotlin.version}</version>
                        </dependency>
                    </dependencies>
                </plugin>
                <!-- resources资源插件 -->
                <plugin>
                    <groupId>org.apache.maven.plugins</groupId>
                    <artifactId>maven-resources-plugin</artifactId>
                    <version>${maven-resources-plugin.version}</version>
                    <configuration>
                        <delimiters>
                            <delimiter>@</delimiter>
                        </delimiters>
                        <useDefaultDelimiters>false</useDefaultDelimiters>
                        <encoding>UTF-8</encoding>
                        <!-- 后缀为pem、pfx的证书文件 -->
                        <nonFilteredFileExtensions>
                            <nonFilteredFileExtension>pem</nonFilteredFileExtension>
                            <nonFilteredFileExtension>pfx</nonFilteredFileExtension>
                            <nonFilteredFileExtension>p12</nonFilteredFileExtension>
                            <nonFilteredFileExtension>key</nonFilteredFileExtension>
                            <nonFilteredFileExtension>db</nonFilteredFileExtension>
                            <nonFilteredFileExtension>eot</nonFilteredFileExtension>
                            <nonFilteredFileExtension>otf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>svg</nonFilteredFileExtension>
                            <nonFilteredFileExtension>ttf</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff</nonFilteredFileExtension>
                            <nonFilteredFileExtension>woff2</nonFilteredFileExtension>
                            <nonFilteredFileExtension>xdb</nonFilteredFileExtension>
                        </nonFilteredFileExtensions>
                    </configuration>
                </plugin>
            </plugins>
        </pluginManagement>
    </build>

</project>
